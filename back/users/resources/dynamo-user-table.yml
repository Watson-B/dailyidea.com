Resources:
  UserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: sortKey
          AttributeType: S
        - AttributeName: email
          AttributeType: S
        - AttributeName: slug
          AttributeType: S
#        - AttributeName: firstLogin
#          AttributeType: B
        - AttributeName: createdDate
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: emailIndex
          KeySchema:
            - AttributeName: email
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: createdDateIndex
          KeySchema:
            - AttributeName: sortKey
              KeyType: HASH
            - AttributeName: createdDate
              KeyType: RANGE
          Projection:
            ProjectionType: INCLUDE
            NonKeyAttributes:
              - firstLogin
        - IndexName: slugIndex
          KeySchema:
            - AttributeName: slug
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST
      TableName: ${self:custom.usersTableName}
  CustomUserOnboardingRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:provider.stage}CustomUserOnboardingRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${self:provider.stage}CustomCloudWatchLogsPolicy-
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - s3:PutObject
                    - s3:PutObjectAcl
                  Resource:
                    - "arn:aws:s3:::${self:provider.avatarsStaticBucketName}"
                    - "arn:aws:s3:::${self:provider.avatarsStaticBucketName}/*"
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
          - PolicyName: ${self:provider.stage}CustomUserOnboardingPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:PutItem
                    - dynamodb:Query
                    - dynamodb:UpdateItem
                    - dynamodb:GetItem
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:dynamodb'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'table/${self:custom.usersTableName}'
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:dynamodb'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'table/${self:custom.usersTableName}/*'
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:dynamodb'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'table/${self:custom.ideasTableName}'
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:dynamodb'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'table/${self:custom.ideasTableName}/*'
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:dynamodb'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'table/${self:custom.ideaCommentsTemporaryTableName}'
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:dynamodb'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'table/${self:custom.ideaCommentsTemporaryTableName}/*'
                - Effect: Allow
                  Action:
                    - ses:SendEmail
                    - lambda:InvokeFunction
                    - cognito-idp:ListUsers
                  Resource: "*"
